{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/api.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/book-create/book-create.component.css","webpack:///./src/app/book-create/book-create.component.html","webpack:///./src/app/book-create/book-create.component.ts","webpack:///./src/app/book-detail/book-detail.component.css","webpack:///./src/app/book-detail/book-detail.component.html","webpack:///./src/app/book-detail/book-detail.component.ts","webpack:///./src/app/book-edit/book-edit.component.css","webpack:///./src/app/book-edit/book-edit.component.html","webpack:///./src/app/book-edit/book-edit.component.ts","webpack:///./src/app/book/book.component.css","webpack:///./src/app/book/book.component.html","webpack:///./src/app/book/book.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {Injectable} from '@angular/core';\r\nimport {Observable, of, throwError} from 'rxjs';\r\nimport {HttpClient, HttpHeaders, HttpErrorResponse} from '@angular/common/http';\r\nimport {catchError, tap, map} from 'rxjs/operators';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\r\n};\r\nconst apiUrl = '/api';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      \r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      \r\n    \r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n    }\r\n    \r\n    return throwError('Something bad happened; please try again later.');\r\n  }\r\n\r\n  private extractData(res: Response) {\r\n    let body = res;\r\n    return body || {};\r\n  }\r\n// This service contain http methods get put post delete defintions to interact with the app.\r\n// http get method to retrieve all the books\r\n  getBooks(): Observable<any> {\r\n    return this.http.get(apiUrl, httpOptions).pipe(\r\n      map(this.extractData),\r\n      catchError(this.handleError));\r\n  }\r\n// http get method to retrieve particular  book by id\r\n  getBook(id: string): Observable<any> {\r\n    const url = `${apiUrl}/${id}`;\r\n    return this.http.get(url, httpOptions).pipe(\r\n      map(this.extractData),\r\n      catchError(this.handleError));\r\n  }\r\n// http post method to add the book\r\n  postBook(data): Observable<any> {\r\n    return this.http.post(apiUrl, data, httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n// http put method to update the book\r\n  updateBook(id: string, data, ex_data): Observable<any> {\r\n    const url = `${apiUrl}/${id}`;\r\n    const return_data = [];\r\n    return_data.push(data);\r\n    return_data.push(ex_data);\r\n    console.log('return_data', return_data);\r\n    return this.http.put(url, return_data, httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n// http delete  method to delete the book by id\r\n  deleteBook(id: string): Observable<{}> {\r\n    const url = `${apiUrl}/${id}`;\r\n    return this.http.delete(url, httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n}","module.exports = \".image{\\r\\n  height:60em; background-size:cover; width:100%;\\r\\n  background-image:url('background.jpeg');\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"image\\\">\\r\\n        <router-outlet></router-outlet>\\r\\n</div>\\r\\n\"","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { BookComponent } from './book/book.component';\r\nimport { BookDetailComponent } from './book-detail/book-detail.component';\r\nimport { BookCreateComponent } from './book-create/book-create.component';\r\nimport { BookEditComponent } from './book-edit/book-edit.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport {\r\n  MatInputModule,\r\n  MatPaginatorModule,\r\n  MatProgressSpinnerModule,\r\n  MatSortModule,\r\n  MatTableModule,\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatFormFieldModule } from '@angular/material';\r\n\r\nconst appRoutes: Routes = [\r\n  {\r\n    path: 'books',\r\n    component: BookComponent,\r\n    data: { title: 'Book List' }\r\n  },\r\n  {\r\n    path: 'book-details/:id',\r\n    component: BookDetailComponent,\r\n    data: { title: 'Book Details' }\r\n  },\r\n  {\r\n    path: 'book-create',\r\n    component: BookCreateComponent,\r\n    data: { title: 'Create Book' }\r\n  },\r\n  {\r\n    path: 'book-edit/:id',\r\n    component: BookEditComponent,\r\n    data: { title: 'Edit Book' }\r\n  },\r\n  { path: '',\r\n    redirectTo: '/books',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    BookComponent,\r\n    BookDetailComponent,\r\n    BookCreateComponent,\r\n    BookEditComponent\r\n  ],\r\n  imports: [\r\n    RouterModule.forRoot(appRoutes),\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatProgressSpinnerModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatFormFieldModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }","module.exports = \"h1,h2{\\r\\n  font-family: \\\"Times New Roman\\\";\\r\\n  text-align: center;\\r\\n  color: black;\\r\\n}\\r\\n\\r\\n#back{\\r\\n  color: darkblue;\\r\\n   font-family: Arial, Helvetica, sans-serif;\\r\\n}\\r\\n\\r\\n.example-form {\\r\\n  min-width: 150px;\\r\\n  max-width: 500px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.example-full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.example-full-width:nth-last-child() {\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.button-row {\\r\\n  margin: 10px 0;\\r\\n}\\r\\n\"","module.exports = \"<div>\\r\\n  <h1>LIBRARY MANAGEMENT SYSTEM</h1>\\r\\n  <h2>You Can Add Your Book List here below...</h2>\\r\\n</div>\\r\\n<!-- link to go back to home page of the app -->\\r\\n<div class=\\\"button-row\\\" id=\\\"back\\\">\\r\\n  <a [routerLink]=\\\"['/books']\\\">\\r\\n    <label><b>Back to List</b></label>\\r\\n  </a>\\r\\n</div>\\r\\n<!-- form which displays all the details of the book to be entered -->\\r\\n<form [formGroup]=\\\"bookForm\\\" (ngSubmit)=\\\"onFormSubmit(bookForm.value)\\\">\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput placeholder=\\\"ISBN\\\" formControlName=\\\"isbn\\\"\\r\\n           [errorStateMatcher]=\\\"matcher\\\">\\r\\n    <mat-error>\\r\\n      <span *ngIf=\\\"!bookForm.get('isbn').valid && bookForm.get('isbn').touched\\\">Please enter ISBN</span>\\r\\n    </mat-error>\\r\\n  </mat-form-field>\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput placeholder=\\\"Title\\\" formControlName=\\\"title\\\"\\r\\n           [errorStateMatcher]=\\\"matcher\\\">\\r\\n    <mat-error>\\r\\n      <span *ngIf=\\\"!bookForm.get('title').valid && bookForm.get('title').touched\\\">Please enter Book Title</span>\\r\\n    </mat-error>\\r\\n  </mat-form-field>\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput placeholder=\\\"Author\\\" formControlName=\\\"author\\\"\\r\\n           [errorStateMatcher]=\\\"matcher\\\">\\r\\n    <mat-error>\\r\\n      <span *ngIf=\\\"!bookForm.get('author').valid && bookForm.get('author').touched\\\">Please enter Book Author</span>\\r\\n    </mat-error>\\r\\n  </mat-form-field>\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\"\\r\\n              [errorStateMatcher]=\\\"matcher\\\"></textarea>\\r\\n    <mat-error>\\r\\n      <span *ngIf=\\\"!bookForm.get('description').valid && bookForm.get('description').touched\\\">Please enter Book Description</span>\\r\\n    </mat-error>\\r\\n  </mat-form-field>\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput placeholder=\\\"Publisher\\\" formControlName=\\\"publisher\\\"\\r\\n           [errorStateMatcher]=\\\"matcher\\\">\\r\\n    <mat-error>\\r\\n      <span *ngIf=\\\"!bookForm.get('publisher').valid && bookForm.get('publisher').touched\\\">Please enter Publisher</span>\\r\\n    </mat-error>\\r\\n  </mat-form-field>\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput placeholder=\\\"Published Year\\\" formControlName=\\\"published_year\\\"\\r\\n           [errorStateMatcher]=\\\"matcher\\\">\\r\\n    <mat-error>\\r\\n      <span *ngIf=\\\"!bookForm.get('published_year').valid && bookForm.get('published_year').touched\\\">Please enter Published Year</span>\\r\\n    </mat-error>\\r\\n  </mat-form-field>\\r\\n  <!-- button to save the book -->\\r\\n  <div class=\\\"button-row\\\">\\r\\n    <button type=\\\"submit\\\" [disabled]=\\\"!bookForm.valid\\\" mat-raised-button color=\\\"primary\\\">\\r\\n      Save\\r\\n    </button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {ApiService} from '../api.service';\r\nimport {FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-book-create',\r\n  templateUrl: './book-create.component.html',\r\n  styleUrls: ['./book-create.component.css']\r\n})\r\nexport class BookCreateComponent implements OnInit {\r\n\r\n  bookForm: FormGroup;\r\n  isbn: string = '';\r\n  title: string = '';\r\n  description: string = '';\r\n  author: string = '';\r\n  publisher: string = '';\r\n  published_year: string = '';\r\n\r\n  constructor(private router: Router, private api: ApiService, private formBuilder: FormBuilder) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.bookForm = this.formBuilder.group({\r\n      'isbn': [null, Validators.required],\r\n      'title': [null, Validators.required],\r\n      'description': [null, Validators.required],\r\n      'author': [null, Validators.required],\r\n      'publisher': [null, Validators.required],\r\n      'published_year': [null, Validators.required]\r\n    });\r\n  }\r\n // consumes post method of the service defined to add book from the page\r\n  onFormSubmit(form: NgForm) {\r\n    this.api.postBook(form)\r\n      .subscribe(res => {\r\n        let id = res['_id'];\r\n        this.router.navigate(['/book-details', id]);\r\n      }, (err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n}","module.exports = \".example-card {\\r\\n  max-width: 500px;\\r\\n}\\r\\n\\r\\n.button-row {\\r\\n  margin: 10px 0;\\r\\n}\\r\\n\\r\\nh1,h2{\\r\\n  font-family: \\\"Times New Roman\\\";\\r\\n  text-align: center;\\r\\n  color: black;\\r\\n}\\r\\n\\r\\n#back{\\r\\n  color: darkblue;\\r\\n   font-family: Arial, Helvetica, sans-serif;\\r\\n}\\r\\n\"","module.exports = \"<h1>LIBRARY MANAGEMENT SYSTEM</h1>\\r\\n<h2>You Can View the Books details here below...</h2>\\r\\n<div class=\\\"button-row\\\">\\r\\n  <!-- button to add book -->\\r\\n  <div class=\\\"button-row\\\" id=\\\"back\\\">\\r\\n    <a [routerLink]=\\\"['/books']\\\">\\r\\n      <label><b>Back to List </b></label>\\r\\n    </a>\\r\\n  </div>\\r\\n<!-- division to display corresponding clicked book details -->\\r\\n<mat-card class=\\\"example-card\\\">\\r\\n  <mat-card-header>\\r\\n    <mat-card-title><h2> Title: {{book.title}}</h2></mat-card-title>\\r\\n    <mat-card-subtitle><b> Description: {{book.description}}</b></mat-card-subtitle>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content>\\r\\n    <dl>\\r\\n      <dt><b>ISBN: </b> {{book.isbn}}</dt>\\r\\n      <dd><br></dd>\\r\\n      <dt><b>Author: </b> {{book.author}}</dt>\\r\\n      <dd><br></dd>\\r\\n      <dt> <b>Publisher: </b>{{book.publisher}}</dt>\\r\\n      <dd><br></dd>\\r\\n      <dt><b>Published Year: </b> {{book.published_year}}</dt>\\r\\n      <dd><br></dd>\\r\\n      <dt><b>Updated Date:</b> {{book.updated_date | date}}</dt>\\r\\n      <dd><br></dd>\\r\\n    </dl>\\r\\n  </mat-card-content>\\r\\n  <!-- buttons to update and delete the book -->\\r\\n  <mat-card-actions>\\r\\n    <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/book-edit', book._id]\\\"><label>Edit</label></a>\\r\\n    <a mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteBook(book._id)\\\"><label>Delete</label></a>\\r\\n  </mat-card-actions>\\r\\n</mat-card>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {ApiService} from '../api.service';\r\n\r\n@Component({\r\n  selector: 'app-book-detail',\r\n  templateUrl: './book-detail.component.html',\r\n  styleUrls: ['./book-detail.component.css']\r\n})\r\nexport class BookDetailComponent implements OnInit {\r\n\r\n  book = {};\r\n\r\n  constructor(private route: ActivatedRoute, private api: ApiService, private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getBookDetails(this.route.snapshot.params['id']);\r\n  }\r\n // consumes get by id method of the service defined to display it on the page\r\n  getBookDetails(id) {\r\n    this.api.getBook(id)\r\n      .subscribe(data => {\r\n        console.log(data);\r\n        this.book = data;\r\n      });\r\n  }\r\n // delete method of the service to delete the record\r\n  deleteBook(id) {\r\n    this.api.deleteBook(id)\r\n      .subscribe(res => {\r\n          this.router.navigate(['/books']);\r\n        }, (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  }\r\n\r\n}\r\n","module.exports = \"h1,h2{\\r\\n  font-family: \\\"Times New Roman\\\";\\r\\n  text-align: center;\\r\\n  color: black;\\r\\n}\\r\\n\\r\\n#back{\\r\\n  color: darkblue;\\r\\n   font-family: Arial, Helvetica, sans-serif;\\r\\n}\\r\\n\\r\\n.example-form {\\r\\n  min-width: 150px;\\r\\n  max-width: 500px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.example-full-width {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.example-full-width:nth-last-child(2) {\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.button-row {\\r\\n  margin: 10px 0;\\r\\n}\\r\\n\"","module.exports = \"<div>\\r\\n  <h1>LIBRARY MANAGEMENT SYSTEM</h1>\\r\\n  <h2>You can edit the book details here...</h2>\\r\\n</div>\\r\\n<!-- link to home page -->\\r\\n<div class=\\\"button-row\\\" id=\\\"back\\\">\\r\\n  <a [routerLink]=\\\"['/books']\\\">\\r\\n    <label><b>Back to List </b></label>\\r\\n  </a>\\r\\n</div>\\r\\n\\r\\n<!-- edit form  -->\\r\\n<form [formGroup]=\\\"bform\\\" (ngSubmit)=\\\"onFormSubmit(bform.value)\\\">\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <!-- edit isbn  -->\\r\\n    <input matInput placeholder=\\\"ISBN\\\" formControlName=\\\"isbn\\\" value={{book.isbn}}\\r\\n           [errorStateMatcher]=\\\"matcher\\\">\\r\\n    <mat-error>\\r\\n      <span *ngIf=\\\"!bform.get('isbn').valid && bform.get('isbn').touched\\\">Enter ISBN here</span>\\r\\n    </mat-error>\\r\\n  </mat-form-field>\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <!-- edit title  -->\\r\\n    <input matInput placeholder=\\\"Title\\\" formControlName=\\\"title\\\" value={{book.title}}\\r\\n           [errorStateMatcher]=\\\"matcher\\\">\\r\\n    <mat-error>\\r\\n      <span *ngIf=\\\"!bform.get('title').valid && bform.get('title').touched\\\">Enter Book Title</span>\\r\\n    </mat-error>\\r\\n  </mat-form-field>\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <!-- edit author  -->\\r\\n    <input matInput placeholder=\\\"Author\\\" formControlName=\\\"author\\\" value={{book.author}}\\r\\n           [errorStateMatcher]=\\\"matcher\\\">\\r\\n    <mat-error>\\r\\n      <span *ngIf=\\\"!bform.get('author').valid && bform.get('author').touched\\\">Enter Book Author</span>\\r\\n    </mat-error>\\r\\n  </mat-form-field>\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n        <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\" value={{book.description}}\\r\\n                  [errorStateMatcher]=\\\"matcher\\\"></textarea>\\r\\n    <mat-error>\\r\\n      <span *ngIf=\\\"!bform.get('description').valid && bform.get('description').touched\\\">Enter Book Description</span>\\r\\n    </mat-error>\\r\\n  </mat-form-field>\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput placeholder=\\\"Publisher\\\" formControlName=\\\"publisher\\\" value={{book.publisher}}\\r\\n           [errorStateMatcher]=\\\"matcher\\\">\\r\\n    <mat-error>\\r\\n      <span *ngIf=\\\"!bform.get('publisher').valid && bform.get('publisher').touched\\\">Enter Publisher</span>\\r\\n    </mat-error>\\r\\n  </mat-form-field>\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput placeholder=\\\"Published Year\\\" formControlName=\\\"published_year\\\" value={{book.published_year}}\\r\\n           [errorStateMatcher]=\\\"matcher\\\">\\r\\n    <mat-error>\\r\\n      <span *ngIf=\\\"!bform.get('published_year').valid && bform.get('published_year').touched\\\">Enter Published Year</span>\\r\\n    </mat-error>\\r\\n  </mat-form-field>\\r\\n  <!-- button  to update the record -->\\r\\n  <div class=\\\"button-row\\\">\\r\\n    <button type=\\\"submit\\\" [disabled]=\\\"!bform.valid\\\" mat-raised-button color=\\\"primary\\\">\\r\\n      Update\\r\\n    </button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ApiService } from '../api.service';\r\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-book-edit',\r\n  templateUrl: './book-edit.component.html',\r\n  styleUrls: ['./book-edit.component.css']\r\n})\r\nexport class BookEditComponent implements OnInit {\r\n\r\n  bform: FormGroup;\r\n  isbn = '';\r\n  title = '';\r\n  description = '';\r\n  author = '';\r\n  publisher = '';\r\n  published_year = '';\r\n\r\n  constructor(private router: Router, private route: ActivatedRoute, private api: ApiService, private formBuilder: FormBuilder) {\r\n  }\r\n\r\n  book = {};\r\n  ex_data = {};\r\n  ngOnInit() {\r\n    this.getBookDetails(this.route.snapshot.params['id']);\r\n    this.bform = this.formBuilder.group({\r\n      'isbn': '',\r\n      'title': '',\r\n      'description': '',\r\n      'author': '',\r\n      'publisher': '',\r\n      'published_year': ''\r\n    });\r\n\r\n  }\r\n  // gets books details bu id\r\n  getBookDetails(id) {\r\n    this.api.getBook(id)\r\n      .subscribe(data => {\r\n        console.log(data);\r\n        this.book = data;\r\n      });\r\n  }\r\n  onFormSubmit(form: NgForm) {\r\n    this.api.getBook(this.route.snapshot.params['id'])\r\n      .subscribe(data => {\r\n        this.ex_data = data;\r\n        this.api.updateBook(this.route.snapshot.params['id'], form, this.ex_data)\r\n          .subscribe(res => {\r\n            this.router.navigate(['/books']);\r\n          }, (err) => {\r\n            console.log(err);\r\n          });\r\n      });\r\n\r\n  }\r\n}\r\n","module.exports = \"h1, h2{\\r\\n  font-family: \\\"Times New Roman\\\";\\r\\n  text-align: center\\r\\n}\\r\\n\\r\\nh1{\\r\\n  color: black;\\r\\n}\\r\\n\\r\\nh2{\\r\\n  color: black;\\r\\n}\\r\\n\\r\\n.example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  max-height: 500px;\\r\\n  min-width: 300px;\\r\\n  overflow: auto;\\r\\n}\\r\\n\\r\\n.isbn-col {\\r\\n  flex: 0 0 100px !important;\\r\\n  white-space: unset !important;\\r\\n}\\r\\n\\r\\n.button-row {\\r\\n  margin: 10px 0;\\r\\n}\\r\\n\"","module.exports = \"<h1>LIBRARY MANAGEMENT SYSTEM</h1>\\r\\n<h2>View Your Books List here below..</h2>\\r\\n<div class=\\\"button-row\\\">\\r\\n  <!-- button to add book -->\\r\\n  <a mat-raised-button color=\\\"primary\\\"  [routerLink]=\\\"['/book-create']\\\">\\r\\n    <label>Add New Books</label>\\r\\n  </a>\\r\\n</div>\\r\\n<!-- displays all list of books in a table -->\\r\\n<div class=\\\"example-container mat-elevation-z8\\\">\\r\\n  <table mat-table #table [dataSource]=\\\"dataSource\\\">\\r\\n\\r\\n    <ng-container matColumnDef=\\\"isbn\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> ISBN</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"isbn-col\\\"> {{element.isbn}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"title\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Title</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.title}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"author\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Author</th> <br>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.author}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"['/book-details/', row._id]\\\"></tr>\\r\\n  </table>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {ApiService} from '../api.service';\r\nimport {DataSource} from '@angular/cdk/collections';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-book',\r\n  templateUrl: './book.component.html',\r\n  styleUrls: ['./book.component.css']\r\n})\r\nexport class BookComponent implements OnInit {\r\n\r\n  books: any;\r\n  displayedColumns = ['isbn', 'title', 'author'];\r\n  dataSource = new BookDataSource(this.api);\r\n\r\n  constructor(private api: ApiService) {\r\n  }\r\n // consumes get method of the service defined to display it on the page\r\n  ngOnInit() {\r\n    this.api.getBooks()\r\n      .subscribe(res => {\r\n        console.log(res);\r\n        this.books = res;\r\n      }, err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n}\r\n\r\nexport class BookDataSource extends DataSource<any> {\r\n  constructor(private api: ApiService) {\r\n    super();\r\n  }\r\n\r\n  connect() {\r\n    return this.api.getBooks();\r\n  }\r\n\r\n  disconnect() {\r\n\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}